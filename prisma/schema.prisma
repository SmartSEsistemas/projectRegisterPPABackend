// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_01_URL")
}

// Register
model Planning_unit_measure {
  id          Int    @id @default(autoincrement())
  description String
  entity_id   Int

  @@map("planning_unit_measures")
}

model Planning_type_resp {
  id            Int             @id @default(autoincrement())
  description   String
  nb_tce        String
  default       Boolean
  entity_id     Int
  Planning_resp Planning_resp[]

  @@map("planning_type_resps")
}

model Planning_resp {
  id                    Int                @id @default(autoincrement())
  natural_person_id     Int
  Planning_type_resp    Planning_type_resp @relation(fields: [planning_type_resp_id], references: [id])
  planning_type_resp_id Int
  office                String
  crc                   String
  start_date            DateTime
  final_date            DateTime
  entity_id             Int

  @@map("planning_resps")
}

// Functional classification

model Planning_standard_resource {
  id                     Int                      @id @default(autoincrement())
  description            String
  level                  String
  separator              String
  size_level             Int
  type                   String
  type_tce               String
  Planning_type_resource Planning_type_resource[]
  Planning_resource      Planning_resource[]

  @@map("planning_standard_resources")
}

model Planning_standard_nr_revenue {
  id          Int    @id @default(autoincrement())
  description String
  level       String
  separator   String
  size_level  Int
  type        String
  type_tce    String

  @@map("planning_standard_nr_revenues")
}

model Planning_function {
  id                    Int                     @id @default(autoincrement())
  number                String
  description           String
  year                  Int
  start_date            DateTime
  final_date            DateTime
  Planning_sub_function Planning_sub_function[]

  @@map("planning_functions")
}

model Planning_sub_function {
  id                   Int               @id @default(autoincrement())
  number               String
  description          String
  Planning_function    Planning_function @relation(fields: [planning_function_id], references: [id])
  planning_function_id Int
  year                 Int
  start_date           DateTime
  final_date           DateTime

  @@map("planning_sub_functions")
}

model Planning_marker {
  id                           Int                            @id @default(autoincrement())
  description                  String
  default                      Boolean
  Planning_resource_x_marker   Planning_resource_x_marker[]
  Planning_nrcost_x_marker     Planning_nrcost_x_marker[]
  Planning_nrresource_x_marker Planning_nrresource_x_marker[]

  @@map("planning_markers")
}

model Planning_type_resource {
  id                            Int                        @id @default(autoincrement())
  description                   String
  Planning_resource             Planning_resource[]
  Planning_standard_resource    Planning_standard_resource @relation(fields: [planning_standard_resource_id], references: [id])
  planning_standard_resource_id Int

  @@map("planning_type_resources")
}

model Planning_resource {
  id                            Int                             @id @default(autoincrement())
  number                        String
  description                   String
  year                          Int
  start_date                    DateTime
  Planning_type_resource        Planning_type_resource          @relation(fields: [planning_type_resource_id], references: [id])
  planning_type_resource_id     Int
  superavit                     Boolean
  Planning_resource_x_marker    Planning_resource_x_marker[]
  Planning_nrrevenue_x_resource Planning_nrrevenue_x_resource[]

  planning_resource_id Int?
  parent               Planning_resource?  @relation("ResourceToResource", fields: [planning_resource_id], references: [id])
  children             Planning_resource[] @relation("ResourceToResource")

  Planning_standard_resource    Planning_standard_resource @relation(fields: [planning_standard_resource_id], references: [id])
  planning_standard_resource_id Int

  @@map("planning_resources")
}

model Planning_resource_x_marker {
  id                   Int               @id @default(autoincrement())
  Planning_resource    Planning_resource @relation(fields: [planning_resource_id], references: [id])
  planning_resource_id Int
  Planning_marker      Planning_marker   @relation(fields: [planning_marker_id], references: [id])
  planning_marker_id   Int

  @@map("Planning_resource_x_markers")
}

model Planning_nature_cost {
  id                       Int                        @id @default(autoincrement())
  number                   String
  description              String
  type                     String
  year                     Int
  start_date               DateTime
  final_date               DateTime
  Planning_nrcost_x_marker Planning_nrcost_x_marker[]

  @@map("planning_nature_costs")
}

model Planning_nrcost_x_marker {
  id                      Int                  @id @default(autoincrement())
  Planning_nature_cost    Planning_nature_cost @relation(fields: [planning_nature_cost_id], references: [id])
  planning_nature_cost_id Int
  Planning_marker         Planning_marker      @relation(fields: [planning_marker_id], references: [id])
  planning_marker_id      Int

  @@map("planning_nrcost_x_markers")
}

model Planning_standard_nr_cost {
  id          Int    @id @default(autoincrement())
  description String
  level       String
  separator   String
  size_level  Int
  type        String
  type_tce    String

  @@map("planning_standard_nr_costs")
}

model Planning_nature_revenue {
  id                            Int                             @id @default(autoincrement())
  number                        String
  description                   String
  type                          String
  deduction                     Boolean
  nr_deduction                  String
  year                          Int
  start_date                    DateTime
  final_date                    DateTime
  Planning_nrrevenue_x_resource Planning_nrrevenue_x_resource[]
  Planning_nrresource_x_marker  Planning_nrresource_x_marker[]

  @@map("planning_nature_revenues")
}

model Planning_nrrevenue_x_resource {
  id                         Int                     @id @default(autoincrement())
  Planning_nature_revenue    Planning_nature_revenue @relation(fields: [planning_nature_revenue_id], references: [id])
  planning_nature_revenue_id Int
  Planning_resource          Planning_resource       @relation(fields: [planning_resource_id], references: [id])
  planning_resource_id       Int

  @@map("planning_nrrevenue_x_resources")
}

model Planning_nrresource_x_marker {
  id                         Int                     @id @default(autoincrement())
  Planning_marker            Planning_marker         @relation(fields: [planning_marker_id], references: [id])
  planning_marker_id         Int
  Planning_nature_revenue    Planning_nature_revenue @relation(fields: [planning_nature_revenue_id], references: [id])
  planning_nature_revenue_id Int

  @@map("Planning_nrresource_x_marker")
}
